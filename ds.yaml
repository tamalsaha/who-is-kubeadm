apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: who-is-kubeadm
  labels:
    app: who-is-kubeadm
rules:
- apiGroups: [""]
  resources:
  - nodes
  verbs: ["get", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: who-is-kubeadm
  labels:
    app: who-is-kubeadm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: who-is-kubeadm
subjects:
- kind: ServiceAccount
  name: who-is-kubeadm
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: who-is-kubeadm
  namespace: kube-system
  labels:
    app: who-is-kubeadm
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: who-is-kubeadm
  namespace: kube-system
  labels:
    app: who-is-kubeadm
spec:
  template:
    metadata:
      labels:
        name: who-is-kubeadm
    spec:
      tolerations:
      - key: node.cloudprovider.kubernetes.io/uninitialized
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      serviceAccountName: who-is-kubeadm
      containers:
      - image: busybox
        command:
        - /bin/sh
        - -c
        - 'while true; do kubectl annotate --overwrite --token=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token) nodes $NODE_NAME cloud.appscode.com/kubeadm-version=$(kubeadm version -o short); sleep 1; done'
        imagePullPolicy: IfNotPresent
        name: busybox
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        volumeMounts:
        - mountPath: /usr/bin/kubeadm
          name: kubeadm
          readOnly: true
        - mountPath: /usr/bin/kubectl
          name: kubectl
          readOnly: true
      volumes:
      - name: kubeadm
        hostPath:
          path: /usr/bin/kubeadm
      - name: kubectl
        hostPath:
          path: /usr/bin/kubectl
